package Ch02;

/**
 * 음수
 */
public class C02 {
	/**
	 * 컴퓨터(CPU)는 가산처리 ( + ) 에 의한 가산처리는 가능하지만
	 * 감산처리 ( - ) 에 의한 감산처리는 불가능하다.
	 * 하지만 보수개념을 이용하여 뺄셈 결과를 전달할수는 있다.
	 * 
	 *  보수개념이란  9 - 3 = 6 이라는 계산을 9 + 7 = 16 에서 10을 삭제하는 작업,
	 *  -3의 보수는 7로서(절대값의 합으로 인해 1bit가 증가하는 수)더한 다음 올려진 수를 삭제하는 방식
	 *  
	 *  2진수도 마찬가지 - 8bit 수로 예시를 들어보자
	 *   ex ) 00000101 = 5
	 *        11111011 = -5
	 *  	=> 00000101과 11111011을 더하면 100000000이 되는데 맨 앞자리를 날려준다
	 */
	
	/** 
	 *  MSB ( 부호비트 )
	 *  가장 왼쪽 1bit를 양수 혹은 음수로 판단하는 bit로 사용
	 *  저장공간( 변수공간 ) 에서 부호비트를 지원하면 (Signed )
	 *  1 : 음수값, 0 : 양수값으로 해석
	 *  저장공간 ( 변수공간 ) 에서 부호비트를 지원하지 않으면 ( Unsigned )
	 *  0,1 : 양수
	 */
	
	/**
	 * 문제풀이
	 * 10진수 ->  2진수
	 * 10 	 ->  00001010
	 * -10	 ->  11110110
	 * 111	 ->  01101111
	 * -111  ->  10010001
	 * 96	 ->  01100000
	 * -96	 ->  10100000
	 * 
	 * 2진수  ->  10진수
	 * 10101010  ->  170
	 * 11001101  ->  205
	 * 10010010  ->  146
	 */
	public static void main(String[] args) {
		System.out.println((byte)(0b10101010));
	}
	
}
